name: Build and Deploy

on:
  push:
    branches:
      - main
  pull_request:

env:
  AWS_REGION: ap-southeast-1
  ECR_REPO_NAME: ${{ secrets.ECR_REPO_NAME }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  CACHE_BUCKET: ${{ secrets.AWS_S3_CACHE_BUCKET }}

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check_and_build
        uses: actions/setup-java@v3
        with:
          distribution: 'openjdk'
          java-version: '17'
          cache: 'gradle'
      - run: ./gradlew check
      - run: ./gradlew

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: |
            build/libs/recycler.jar
            build/reports

  build_and_push_image:
    needs: build_and_test
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ${{ secrets.ECR_REPO_NAME }}:$GITHUB_SHA
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: my-artifact
          path: build/libs/recycler.jar

      - name: Build Image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.IMAGE_NAME }}

      - name: Push to ECR
        run: |
          docker tag ${{ env.IMAGE_NAME }} ${{ steps.login-ecr.outputs.registry }}/${{ env.IMAGE_NAME }}
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.IMAGE_NAME }}
