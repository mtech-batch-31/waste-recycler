name: Build and Deploy

on:
  push:
    branches:
      - main
  pull_request:

env:
  AWS_REGION: ap-southeast-1
  ECR_REPO_NAME: ${{ secrets.ECR_REPO_NAME }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  CACHE_BUCKET: ${{ secrets.AWS_S3_CACHE_BUCKET }}


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Create Gradle directories
      run: |
        mkdir -p $HOME/.gradle/caches
        mkdir -p $HOME/.gradle/wrapper

    - name: Cache Dependencies
      run: |
        mkdir -p /home/runner/.gradle/caches
        touch /home/runner/.gradle/caches/.keep

        aws s3 ls s3://${{ env.CACHE_BUCKET }} || aws s3 mb s3://${{ env.CACHE_BUCKET }}

        aws s3 sync file://$HOME/.gradle/caches s3://${{ env.CACHE_BUCKET }}/gradle/caches --delete
        aws s3 sync file://$HOME/.gradle/wrapper s3://${{ env.CACHE_BUCKET }}/gradle/wrapper --delete


    - name: Build and Push Docker Image
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        aws s3 sync s3://${{ env.CACHE_BUCKET }}/gradle/caches $HOME/.gradle/caches
        aws s3 sync s3://${{ env.CACHE_BUCKET }}/gradle/wrapper $HOME/.gradle/wrapper

        docker build --cache-from ${{ env.IMAGE_REPO_NAME }}:latest --tag ${{ env.IMAGE_REPO_NAME }}:${{ env.IMAGE_TAG }} .
        docker tag ${{ env.IMAGE_REPO_NAME }}:${{ env.IMAGE_TAG }} ${{ env.ECR_REGISTRY }}/${{ env.IMAGE_REPO_NAME }}:${{ env.IMAGE_TAG }}
        docker push ${{ env.ECR_REGISTRY }}/${{ env.IMAGE_REPO_NAME }}:${{ env.IMAGE_TAG }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Download cache
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ env.CACHE_BUCKET }}
      if: env.CACHE_BUCKET != ''

    - name: Deploy to ECR
      uses: aws-actions/amazon-ecs-deploy@v2
      with:
        cluster: ${{ secrets.ECS_CLUSTER }}
        service: ${{ secrets.ECS_SERVICE }}
        image: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPO_NAME }}:${{ env.IMAGE_TAG }}
